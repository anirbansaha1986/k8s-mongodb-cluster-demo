apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "mongodb-cluster-demo.fullname" . }}-router"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "mongodb-cluster-demo.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mongodb-cluster-demo.labels" . | nindent 6 }}
      role: mongo-router
  serviceName: "{{ include "mongodb-cluster-demo.fullname" . }}-routersvc"
  replicas: {{ .Values.replicas.router.count }}
  template:
    metadata:
      labels:
        {{- include "mongodb-cluster-demo.labels" . | nindent 8 }}
        role: mongo-router
        app: mongo
      {{- if not .Values.serviceMonitor.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "metrics"
      {{- end }}
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      terminationGracePeriodSeconds: 30
      {{- $nodes := (lookup "v1" "Node" "" "").items }}
      {{- if $nodes }}
      #Nodes count: {{- len $nodes }} ; minAvailable.router: {{- .Values.minAvailable.router }}; Replicas: {{- .Values.replicas.router.count }}
        {{- if gt (len $nodes | int) (.Values.minAvailable.router | int) }}
          {{- if gt (len $nodes | int) (.Values.replicas.router.count | int) }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: 'app.kubernetes.io/name'
                operator: In
                values:
                - "{{ include "mongodb-cluster-demo.name" . }}"
              - key: 'app.kubernetes.io/instance'
                operator: In
                values:
                - "{{ .Release.Name }}"
              - key: 'helm-revision'
                operator: In
                values:
                - "{{ .Release.Revision }}"
              - key: 'role'
                operator: In
                values:
                - "mongo-router"
            topologyKey: "kubernetes.io/hostname"
          {{- end }}
        {{- end }}
      {{- end }}
      volumes:
      - name: keyfiles
        secret:
            secretName: {{ include "mongodb-cluster-demo.fullname" . }}-keys
            defaultMode: 0644
            items:
            - key: key1
              path: keyfile
      initContainers:
      containers:
      - name: mongo
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - name: keyfiles
            mountPath: /secret/keyfile
            subPath: keyfile
            readOnly: true
        command:
          - 'bash'
          - '-c'
          - |
            ps aux
            id
            ls -l /data
            ls -l /secret/keyfile
            cp /secret/keyfile /tmp/keyfile
            chmod 400 /tmp/keyfile
            ls -l /tmp/keyfile
            mongos --configdb {{ include "mongodb-cluster-demo.configstr" . }} --bind_ip_all --port {{ $.Values.service.router.ports.port }} --transitionToAuth --keyFile=/tmp/keyfile
            EXCODE="$?"
            echo "app finished at $(date -u)" | tee -a /tmp/prestop.log
            echo "app finished, result code: $EXCODE"
            echo
            echo "Container lifecycle logged events:"
            echo
            cat /tmp/prestop.log
        lifecycle:
          preStop:
            exec:
              command: 
                - "/bin/bash"
                - "-c"
                - |
                  echo 'lyfecycle preStop hook: Pod is set to the “Terminating” State, pause 5s and send SIGINT to dotnet' >> /tmp/prestop.log
                  echo "sleep 3s since $(date -u)" >> /tmp/prestop.log
                  sleep 3s
                  echo "preStop will shutdown mongos now at $(date -u)" >> /tmp/prestop.log
                  mongo mongodb://127.0.0.1:27017/admin --quiet --eval "db.shutdownServer();"
        env:
          - name: "SHARD_COUNT"
            value: "{{ .Values.shardsCount }}"
        {{- range $i, $e := until ( .Values.shardsCount | int) }}
        {{- $_ := set $ "shardIndex" $i }}
          - name: "SHARD{{ $i }}_RS"
            value: "{{ include "mongodb-cluster-demo.dbstr" $ }}"
        {{- end }}
        ports:
          - name: router
            containerPort: {{ .Values.service.router.ports.port }}
            protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.router.ports.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.router.ports.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
      - name: mongodb-exporter
        env:
          - name: MONGODB_URI
            value: "mongodb://127.0.0.1:{{ .Values.service.router.ports.port }}"
        {{- if .Values.env }}
        {{- range $key, $value := .Values.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
        {{- end }}
        {{- end }}
        image: "{{ .Values.exporter_image.repository }}:{{ .Values.exporter_image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --web.listen-address={{ printf ":%s" .Values.exporter_port }}
        {{- toYaml .Values.extraArgs | nindent 8 }}
        ports:
        - name: metrics
          containerPort: {{ .Values.exporter_port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
